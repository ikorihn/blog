{"version":3,"file":"component---src-pages-index-tsx-11b6f5352d19302a699e.js","mappings":"oMAyEA,UAlEmE,SAAC,GAG7D,IAAD,IAFJA,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,GAAY,UAAAF,EAAKG,YAAL,mBAAWC,oBAAX,eAAyBC,QAAzB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,QAEN,QAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,IACjC,QAAC,IAAD,CAAKG,MAAM,eACX,QAAC,IAAD,OACA,gLAUJ,QAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,IACjC,QAAC,IAAD,CAAKG,MAAM,eACX,QAAC,IAAD,OACA,cAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GAAS,IAAD,MACjB,QAAoBC,IAAhBD,EAAKE,aAA6CD,IAArBD,EAAKE,OAAOC,KAC3C,OAAO,mBAGT,IAAMX,GAAQ,UAAAQ,EAAKI,mBAAL,eAAkBZ,QAASQ,EAAKE,OAAOC,KAErD,OACE,cAAIE,IAAKL,EAAKE,OAAOC,OACnB,mBACEG,UAAU,iBACVC,WAAS,EACTC,SAAS,8BAET,uBACE,mBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKE,OAAOC,KAAMQ,SAAS,QACnC,gBAAMA,SAAS,YAAYnB,MAG/B,+BAAQQ,EAAKI,mBAAb,aAAQ,EAAkBQ,QAE5B,wBACE,aACEC,wBAAyB,CACvBC,QACE,UAAAd,EAAKI,mBAAL,eAAkBW,cAAef,EAAKgB,SAAW,IAErDL,SAAS","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogIndexQuery>> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          if (post.fields === undefined || post.fields.slug === undefined) {\n            return <li></li>\n          }\n\n          const title = post.frontmatter?.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter?.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html:\n                        post.frontmatter?.description || post.excerpt || '',\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","undefined","fields","slug","frontmatter","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}