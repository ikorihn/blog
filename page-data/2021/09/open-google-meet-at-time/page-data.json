{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2021/09/open-google-meet-at-time/",
    "result": {"data":{"site":{"siteMetadata":{"title":"ikorihn Blog"}},"markdownRemark":{"id":"0ffc50e1-05d9-560f-8de8-4507c7f2b283","excerpt":"モチベーション オンラインミーティングをGoogle Meetでやっているのですが、気づいたら開始時間を過ぎていることがあります(本当によくない)\n通知が来たときに開始までに少し時間があるので別な作業をしてしまうパターンが多いです。 時間になったらMeet…","html":"<div class=\"gatsby-highlight\" data-language=\"toc\"><pre class=\"language-toc\"><code class=\"language-toc\"># This code block gets replaced with the TOC</code></pre></div>\n<h2 id=\"モチベーション\">モチベーション</h2>\n<p>オンラインミーティングをGoogle Meetでやっているのですが、気づいたら開始時間を過ぎていることがあります(本当によくない)\n通知が来たときに開始までに少し時間があるので別な作業をしてしまうパターンが多いです。</p>\n<p>時間になったらMeetの画面を自動で開いて、強制的に作業を中断すればそんなことがなくなる気がします。</p>\n<h2 id=\"方針\">方針</h2>\n<p>Googleカレンダーから予定を取得して、時間になったらそのMeetのURLをブラウザで開くようにしたいと思います。</p>\n<p>やり方はいろいろあると思います。\nChrome拡張でカレンダーにアクセスする、Calendar APIでスケジュール一覧を取得する、…</p>\n<p>今回は諸般の事情でCalendar APIを直接使えなかったため、以下の方針にしました。\nOSはMacです。</p>\n<ul>\n<li>Google Apps Script(GAS) でカレンダーから一日のスケジュールをJSONで取得する</li>\n<li>このGASをWebアプリとして公開して、HTTP GETで取得できるようにする</li>\n<li>スケジュールの時刻に <code class=\"language-text\">at</code> コマンドをセットして、<code class=\"language-text\">open &lt;MeetのURL></code> を実行する</li>\n</ul>\n<p>ターミナルで <code class=\"language-text\">at</code> をセットするのは今のところ手で朝に実行しています。</p>\n<p>もっといいやり方がある気はしますが、とりあえずこれでやりたいことは出来ました。\n以下、各手順となります。</p>\n<h2 id=\"スケジュール取得gasを作成する\">スケジュール取得GASを作成する</h2>\n<p><a href=\"https://script.google.com/home\">https://script.google.com/home</a> から新しいスクリプトを作成する</p>\n<h3 id=\"gasのcalendar-apiを有効化\">GASのCalendar APIを有効化</h3>\n<p>標準の <a href=\"https://developers.google.com/apps-script/reference/calendar\">CalendarApp</a> では取れる情報が少なくMeetのURLがとれないため、<a href=\"https://developers.google.com/apps-script/advanced/calendar\">Calendar API</a> を使用する</p>\n<p>GASのエディタ > サービス > Calendar を有効化</p>\n<h3 id=\"dayjs-を使えるようにする\">dayjs を使えるようにする</h3>\n<p>標準の <a href=\"https://developers.google.com/apps-script/reference/utilities/utilities\">Utilities.formatDate</a> でも日付フォーマットはできるが、もう少し日付をうまく扱うためにライブラリを入れる。\nMoment.jsは開発が止まっているので、dayjsを使う。</p>\n<p>GASのエディタ > ライブラリを追加 > dayjs のスクリプトID <code class=\"language-text\">1ShsRhHc8tgPy5wGOzUvgEhOedJUQD53m-gd8lG2MOgs-dXC_aCZn9lFB</code> を入力</p>\n<h4 id=\"余談\">余談</h4>\n<p>ライブラリのスクリプトIDを検索する方法がわからない…\n仕方なく個人ブログやQiitaから情報を得たけど、公式情報じゃないので気持ち悪い</p>\n<p>スクリプトIDのエディタのURLを開くと、たしかにdayjsのコードのよう\n<a href=\"https://script.google.com/home/projects/1ShsRhHc8tgPy5wGOzUvgEhOedJUQD53m-gd8lG2MOgs-dXC_aCZn9lFB/edit\">https://script.google.com/home/projects/1ShsRhHc8tgPy5wGOzUvgEhOedJUQD53m-gd8lG2MOgs-dXC_aCZn9lFB/edit</a></p>\n<h3 id=\"カレンダーから予定を取得してjsonで返却する実装\">カレンダーから予定を取得してJSONで返却する実装</h3>\n<p>Webアプリとして使えるようにするため、<code class=\"language-text\">doGet</code> 関数をエントリーポイントに実装する</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript:code.gs\"><pre class=\"language-javascript:code.gs\"><code class=\"language-javascript:code.gs\">function doGet(e) {\n    return ContentService.createTextOutput(JSON.stringify(getSchedule()));\n}\n\nfunction getSchedule() {\n  const now = new Date();\n  const begin = dayjs.dayjs(now);\n  const end = dayjs.dayjs(now).endOf(&#39;day&#39;);\n    \n  // デフォルトカレンダーのID\n  const calendarId = CalendarApp.getDefaultCalendar().getId();\n\n  // Calendar APIで本日の予定を取得する\n  const events = Calendar.Events.list(calendarId, {\n    timeMin: begin.toISOString(),\n    timeMax: end.toISOString(),\n    singleEvents: true,\n    orderBy: &#39;startTime&#39;,\n  })\n\n  const todayEvent = events.items.map(event =&gt; {\n    let start;\n    if (event.start.date) {\n      // All-day event.\n      start = new Date(event.start.date);\n    } else {\n      start = new Date(event.start.dateTime);\n    }\n\n    // atコマンドで扱いやすい時間形式にフォーマット\n    return {\n      title: event.summary,\n      start: dayjs.dayjs(start).subtract(1, &#39;minute&#39;).format(&quot;YYYYMMDDHHmm&quot;),\n      meetUrl: event.hangoutLink,\n    }\n  })\n\n  return todayEvent;\n}</code></pre></div>\n<h3 id=\"webアプリとして公開\">Webアプリとして公開</h3>\n<p>デプロイ > 新しいデプロイ > 説明を入力してデプロイ > WebアプリのURLを取得</p>\n<h2 id=\"atコマンドを有効化\">atコマンドを有効化</h2>\n<p>Macのatコマンドはデフォルトでは無効になっているので有効化する。</p>\n<p><a href=\"https://qiita.com/shge/items/6c43947a77abd9d2d1b2\">Macでatコマンドが実行できないときの対処法 - Qiita</a>\n<a href=\"https://neos21.net/blog/2019/09/13-02.html\">MacOS で at コマンドを有効化して使ってみる - Neo’s World</a></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist</code></pre></div>\n<p><code class=\"language-text\">/usr/libexec/atrun</code> にフルディスクアクセスをつける</p>\n<h2 id=\"ターミナルで予定一覧を取得してatコマンドで設定\">ターミナルで予定一覧を取得して、atコマンドで設定</h2>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> -L <span class=\"token string\">\"&lt;GASのWebアプリURL>\"</span> <span class=\"token operator\">|</span> jq -r <span class=\"token string\">'.[] | .title + \",\" + .start + \",\" + .meetUrl'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F <span class=\"token string\">','</span> <span class=\"token string\">'{ print system(\"echo open \" $3 \" | at -t \" $2 ) }'</span></code></pre></div>\n<h2 id=\"まとめ\">まとめ</h2>\n<p>毎朝手動でatコマンドを仕込むようにしていて、そこだけは手間だがいまのところこれのおかげで時間になったら作業を止めることができている。</p>\n<p>atコマンドはデフォルトで無効になっていて、Macでスケジュール実行のコマンドはlaunchdを使ったほうがいいのではという気がしている。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E3%83%A2%E3%83%81%E3%83%99%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\">モチベーション</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%96%B9%E9%87%9D\">方針</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%B9%E3%82%B1%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%8F%96%E5%BE%97gas%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">スケジュール取得GASを作成する</a></p>\n<ul>\n<li>\n<p><a href=\"#gas%E3%81%AEcalendar-api%E3%82%92%E6%9C%89%E5%8A%B9%E5%8C%96\">GASのCalendar APIを有効化</a></p>\n</li>\n<li>\n<p><a href=\"#dayjs-%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\">dayjs を使えるようにする</a></p>\n<ul>\n<li><a href=\"#%E4%BD%99%E8%AB%87\">余談</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC%E3%81%8B%E3%82%89%E4%BA%88%E5%AE%9A%E3%82%92%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6json%E3%81%A7%E8%BF%94%E5%8D%B4%E3%81%99%E3%82%8B%E5%AE%9F%E8%A3%85\">カレンダーから予定を取得してJSONで返却する実装</a></p>\n</li>\n<li>\n<p><a href=\"#web%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A8%E3%81%97%E3%81%A6%E5%85%AC%E9%96%8B\">Webアプリとして公開</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#at%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E6%9C%89%E5%8A%B9%E5%8C%96\">atコマンドを有効化</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%A7%E4%BA%88%E5%AE%9A%E4%B8%80%E8%A6%A7%E3%82%92%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6at%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E8%A8%AD%E5%AE%9A\">ターミナルで予定一覧を取得して、atコマンドで設定</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>","frontmatter":{"title":"Googleカレンダーの予定時刻になったらMeetを自動で開くようにする","date":"September 24, 2021","description":"Googleカレンダーの予定時刻になったらMeetを自動で開くようにする"}},"previous":{"fields":{"slug":"/2021/08/karabiner-elements-recommend/"},"frontmatter":{"title":"Karabiner-Elementsで個人的におすすめのキーバインド"}},"next":{"fields":{"slug":"/2021/09/jenkins-ui-customize/"},"frontmatter":{"title":"Jenkinsの見た目をカスタマイズ"}}},"pageContext":{"id":"0ffc50e1-05d9-560f-8de8-4507c7f2b283","previousPostId":"f71b3d4c-7967-5785-91ac-fd2e4f4ec683","nextPostId":"e784d22a-e16b-5507-9f22-9701a95311bc"}},
    "staticQueryHashes": ["1857159792","984448874"]}