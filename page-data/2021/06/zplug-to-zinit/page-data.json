{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2021/06/zplug-to-zinit/",
    "result": {"data":{"site":{"siteMetadata":{"title":"ikorihn Blog"}},"markdownRemark":{"id":"f05f60e0-9f93-5f25-8801-5d7a7b8d7dc3","excerpt":"移行理由 自分がターミナルで使用しているシェルの変遷 2016 ~ 2020/04 zsh zplug 2020/04 ~ 2021/04 fishに移行した 2021/04 ~ zshに戻った zshのカスタマイズが面倒なのと、シェルの起動が遅かったので、カスタマイズが簡単なfish…","html":"<div class=\"gatsby-highlight\" data-language=\"toc\"><pre class=\"language-toc\"><code class=\"language-toc\"># This code block gets replaced with the TOC</code></pre></div>\n<h2 id=\"移行理由\">移行理由</h2>\n<p>自分がターミナルで使用しているシェルの変遷</p>\n<ul>\n<li>2016 ~ 2020/04 zsh zplug</li>\n<li>2020/04 ~ 2021/04 fishに移行した</li>\n<li>2021/04 ~ zshに戻った</li>\n</ul>\n<p>zshのカスタマイズが面倒なのと、シェルの起動が遅かったので、カスタマイズが簡単なfishに移行したが、以下の理由でまたzshに戻ってきた</p>\n<ul>\n<li>fishはPOSIX非互換なのでコマンドを調べるのが手間</li>\n<li>bash/zshで作ったスクリプトを書き換える必要がある</li>\n</ul>\n<p>zinitは起動が早いと聞いたので、zplugからzinitに移行する</p>\n<h2 id=\"インストール\">インストール</h2>\n<p><a href=\"https://github.com/zdharma/zinit#automatic-installation-recommended\">公式の推奨手順</a></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sh</span> -c <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh<span class=\"token variable\">)</span></span>\"</span></code></pre></div>\n<p><code class=\"language-text\">~/.zinit</code> (<code class=\"language-text\">$ZDOTDIR</code> が設定されていれば <code class=\"language-text\">$ZDOTDIR/.zinit</code>) にインストールされる。\nまた、 <code class=\"language-text\">~/.zshrc</code> にzinitの設定が追記されるので、リロードし、Zinitをコンパイルする。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">source</span> ~/.zshrc\nzinit self-update</code></pre></div>\n<h2 id=\"プラグインの設定\">プラグインの設定</h2>\n<p>完全な例</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">### Added by Zinit's installer</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">$ZDOTDIR</span>/.zinit/bin/zinit.zsh <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    print -P <span class=\"token string\">\"%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f\"</span>\n    <span class=\"token builtin class-name\">command</span> <span class=\"token function\">mkdir</span> -p <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.zsh/.zinit\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">command</span> <span class=\"token function\">chmod</span> g-rwX <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.zsh/.zinit\"</span>\n    <span class=\"token builtin class-name\">command</span> <span class=\"token function\">git</span> clone https://github.com/zdharma/zinit <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.zsh/.zinit/bin\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n        print -P <span class=\"token string\">\"%F{33}▓▒░ %F{34}Installation successful.%f%b\"</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">\\</span>\n        print -P <span class=\"token string\">\"%F{160}▓▒░ The clone has failed.%f%b\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token variable\">$ZDOTDIR</span>/.zinit/bin/zinit.zsh\"</span>\nautoload -Uz _zinit\n<span class=\"token variable\"><span class=\"token punctuation\">((</span> ${<span class=\"token operator\">+</span>_comps} <span class=\"token punctuation\">))</span></span> <span class=\"token operator\">&amp;&amp;</span> _comps<span class=\"token punctuation\">[</span>zinit<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>_zinit\n\n<span class=\"token comment\"># Load a few important annexes, without Turbo</span>\n<span class=\"token comment\"># (this is currently required for annexes)</span>\nzinit light-mode <span class=\"token keyword\">for</span> <span class=\"token punctuation\">\\</span>\n    zinit-zsh/z-a-rust <span class=\"token punctuation\">\\</span>\n    zinit-zsh/z-a-as-monitor <span class=\"token punctuation\">\\</span>\n    zinit-zsh/z-a-patch-dl <span class=\"token punctuation\">\\</span>\n    zinit-zsh/z-a-bin-gem-node\n\n<span class=\"token comment\">### End of Zinit's installer chunk</span>\n\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid<span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"zdharma/fast-syntax-highlighting\"</span>\nzinit light <span class=\"token string\">\"zsh-users/zsh-autosuggestions\"</span>\nzinit light <span class=\"token string\">\"zsh-users/zsh-completions\"</span>\nzinit light <span class=\"token string\">\"zsh-users/zsh-history-substring-search\"</span>\nbindkey <span class=\"token string\">'^[[A'</span> history-substring-search-up\nbindkey <span class=\"token string\">'^[[B'</span> history-substring-search-down\n\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid pick<span class=\"token string\">'init.sh'</span><span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"b4b4r07/enhancd\"</span>\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid<span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"reegnz/jq-zsh-plugin\"</span>\n\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid<span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"b4b4r07/emoji-cli\"</span>\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid<span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"mollifier/cd-gitroot\"</span>\nzinit light <span class=\"token string\">\"Aloxaf/fzf-tab\"</span>\n\nzinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid<span class=\"token punctuation\">;</span> zinit light <span class=\"token string\">\"lukechilds/zsh-better-npm-completion\"</span>\n\n<span class=\"token comment\">#######</span>\n<span class=\"token comment\"># https://github.com/Aloxaf/fzf-tab</span>\n<span class=\"token comment\">#######</span>\nenable-fzf-tab\n<span class=\"token comment\"># zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup</span>\nzstyle <span class=\"token string\">':fzf-tab:complete:cd:*'</span> fzf-preview <span class=\"token string\">'exa -1 --color=always $realpath'</span>\nzstyle <span class=\"token string\">':fzf-tab:*'</span> fzf-bindings <span class=\"token string\">'ctrl-j:accept'</span> <span class=\"token string\">'ctrl-a:toggle-all'</span> <span class=\"token string\">'ctrl-space:toggle+down'</span>\n<span class=\"token comment\"># disable sort when completing `git checkout`</span>\nzstyle <span class=\"token string\">':completion:*:git-checkout:*'</span> <span class=\"token function\">sort</span> <span class=\"token boolean\">false</span>\n<span class=\"token comment\"># set descriptions format to enable group support</span>\nzstyle <span class=\"token string\">':completion:*:descriptions'</span> <span class=\"token function\">format</span> <span class=\"token string\">'[%d]'</span>\n<span class=\"token comment\"># set list-colors to enable filename colorizing</span>\nzstyle <span class=\"token string\">':completion:*'</span> list-colors <span class=\"token variable\">${(s.<span class=\"token operator\">:</span>.)LS_COLORS}</span>\n<span class=\"token comment\"># preview directory's content with exa when completing cd</span>\nzstyle <span class=\"token string\">':fzf-tab:complete:cd:*'</span> fzf-preview <span class=\"token string\">'exa -1 --color=always $realpath'</span>\n<span class=\"token comment\"># switch group using `,` and `.`</span>\nzstyle <span class=\"token string\">':fzf-tab:*'</span> switch-group <span class=\"token string\">','</span> <span class=\"token string\">'.'</span></code></pre></div>\n<p><code class=\"language-text\">End of Zinit's installer chunk</code> までは、インストーラが追記した部分。</p>\n<h3 id=\"プラグインのダウンロード有効化\">プラグインのダウンロード、有効化</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">zinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid\nzinit light <span class=\"token string\">\"zdharma/fast-syntax-highlighting\"</span>\n\nzinit load <span class=\"token string\">\"zdharma/history-search-multi-word\"</span></code></pre></div>\n<p>zinitには2つのプラグインロード方法がある</p>\n<ul>\n<li><code class=\"language-text\">zinit load</code>\n<ul>\n<li>トラッキング機能を有効にする。zinit report で一覧表示ができたり、zinit unload でプラグインを無効化できるなどの利点があるが、ロードは遅くなる</li>\n</ul>\n</li>\n<li><code class=\"language-text\">zinit light</code>\n<ul>\n<li>トラッキング機能が無効になる。一覧等の機能が使えない代わりに高速</li>\n</ul>\n</li>\n</ul>\n<p>めったにトラッキング機能を使わないため、基本的に <code class=\"language-text\">zinit light</code> でロードすることにした</p>\n<h3 id=\"zinit-ice\">zinit ice</h3>\n<p>後続の <code class=\"language-text\">zinit load</code>, <code class=\"language-text\">zinit light</code> の挙動を制御する</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">zinit ice <span class=\"token function\">wait</span><span class=\"token string\">'1'</span> lucid pick<span class=\"token string\">'init.sh'</span>\nzinit light <span class=\"token string\">\"b4b4r07/enhancd\"</span>\n<span class=\"token comment\"># zinit ice wait'1' lucid pick'init.sh'; zinit light \"b4b4r07/enhancd\" と同義</span></code></pre></div>\n<ul>\n<li>wait\n<ul>\n<li>zshが起動したあとにプラグインを遅延ロードする秒数を指定する</li>\n</ul>\n</li>\n<li>lucid\n<ul>\n<li>遅延ロードしたときに、コンソールにロード情報が出力されるのを抑制する</li>\n</ul>\n</li>\n<li>pick\n<ul>\n<li>sourceするファイルを指定する。pluginが <code class=\"language-text\">*.plugin.zsh</code> ファイルを起点にしていない場合、明示的に指定する</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"結果\">結果</h2>\n<p>2秒くらいかかっていた起動時間が0.6秒前後くらいになった。\nまた、zplugだと複数シェルを同時に起動すると競合して状態がおかしくるのか、同じプラグインが複数回ロードされることがまれにあったが、\nこういった問題も起こらなくなった。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E7%A7%BB%E8%A1%8C%E7%90%86%E7%94%B1\">移行理由</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">インストール</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AE%E8%A8%AD%E5%AE%9A\">プラグインの設定</a></p>\n<ul>\n<li><a href=\"#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%9C%89%E5%8A%B9%E5%8C%96\">プラグインのダウンロード、有効化</a></li>\n<li><a href=\"#zinit-ice\">zinit ice</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E6%9E%9C\">結果</a></p>\n</li>\n</ul>","frontmatter":{"title":"zplugをzinitに移行する","date":"June 21, 2021","description":"zplugをzinitに移行する"}},"previous":{"fields":{"slug":"/2021/06/fish-history-to-zsh-history/"},"frontmatter":{"title":"fishのhistoryをzshに移行する"}},"next":{"fields":{"slug":"/2021/08/karabiner-elements-recommend/"},"frontmatter":{"title":"Karabiner-Elementsで個人的におすすめのキーバインド"}}},"pageContext":{"id":"f05f60e0-9f93-5f25-8801-5d7a7b8d7dc3","previousPostId":"163e15c9-69cd-5aaf-a5ac-65393cb795e8","nextPostId":"f71b3d4c-7967-5785-91ac-fd2e4f4ec683"}},
    "staticQueryHashes": ["1857159792","984448874"]}